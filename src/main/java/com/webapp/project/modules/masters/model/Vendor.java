package com.webapp.project.modules.masters.model;
// Generated Jul 9, 2017 1:44:32 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.webapp.project.framework.model.AppUser;

/**
 * Vendormaster generated by hbm2java
 */
@Entity
@Table(name = "vendormaster", catalog = "websystique")
public class Vendor implements java.io.Serializable {

	private long vendorId;
	private AppUser appUser;
	private City city;
	private Tax tax;
	private String vendorCode;
	private Long vendorName;
	private String address;
	private String contactNumber;
	private String email;
	private Long cityId;
	private Long stateId;
	private Long accHeadId;
	private String panno;
	private Date createDate;
	private Date modifiedDate;
	private Integer createUserId;
	private String createUsername;
	private String createUsertype;
	private Set<LocalFees> localFees = new HashSet<LocalFees>(0);
	private Set<VendorCreditDetails> vendorCreditDetails = new HashSet<VendorCreditDetails>(0);

	public Vendor() {
	}

	public Vendor(long vendorId, Date modifiedDate) {
		this.vendorId = vendorId;
		this.modifiedDate = modifiedDate;
	}

	public Vendor(long vendorId, AppUser appUser, City city, Tax tax, String vendorCode,
			Long vendorName, String address, String contactNumber, String email, Long cityId, Long stateId,
			Long accHeadId, String panno, Date createDate, Date modifiedDate, Integer createUserId,
			String createUsername, String createUsertype, Set<LocalFees> localFees,
			Set<VendorCreditDetails> vendorCreditDetails) {
		this.vendorId = vendorId;
		this.appUser = appUser;
		this.city = city;
		this.tax = tax;
		this.vendorCode = vendorCode;
		this.vendorName = vendorName;
		this.address = address;
		this.contactNumber = contactNumber;
		this.email = email;
		this.cityId = cityId;
		this.stateId = stateId;
		this.accHeadId = accHeadId;
		this.panno = panno;
		this.createDate = createDate;
		this.modifiedDate = modifiedDate;
		this.createUserId = createUserId;
		this.createUsername = createUsername;
		this.createUsertype = createUsertype;
		this.localFees = localFees;
		this.vendorCreditDetails = vendorCreditDetails;
	}

	@Id

	@Column(name = "vendorId", unique = true, nullable = false)
	public long getVendorId() {
		return this.vendorId;
	}

	public void setVendorId(long vendorId) {
		this.vendorId = vendorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userId")
	public AppUser getAppUser() {
		return this.appUser;
	}

	public void setAppUser(AppUser appUser) {
		this.appUser = appUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userId", insertable = false, updatable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "taxId")
	public Tax getTax() {
		return this.tax;
	}

	public void setTax(Tax taxmaster) {
		this.tax = tax;
	}

	@Column(name = "vendorCode", length = 65)
	public String getVendorCode() {
		return this.vendorCode;
	}

	public void setVendorCode(String vendorCode) {
		this.vendorCode = vendorCode;
	}

	@Column(name = "vendorName", precision = 11, scale = 0)
	public Long getVendorName() {
		return this.vendorName;
	}

	public void setVendorName(Long vendorName) {
		this.vendorName = vendorName;
	}

	@Column(name = "address", length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "contactNumber", length = 20)
	public String getContactNumber() {
		return this.contactNumber;
	}

	public void setContactNumber(String contactNumber) {
		this.contactNumber = contactNumber;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "cityId")
	public Long getCityId() {
		return this.cityId;
	}

	public void setCityId(Long cityId) {
		this.cityId = cityId;
	}

	@Column(name = "stateId")
	public Long getStateId() {
		return this.stateId;
	}

	public void setStateId(Long stateId) {
		this.stateId = stateId;
	}

	@Column(name = "accHeadId")
	public Long getAccHeadId() {
		return this.accHeadId;
	}

	public void setAccHeadId(Long accHeadId) {
		this.accHeadId = accHeadId;
	}

	@Column(name = "PANNo", length = 20)
	public String getPanno() {
		return this.panno;
	}

	public void setPanno(String panno) {
		this.panno = panno;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", nullable = false, length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "create_userId")
	public Integer getCreateUserId() {
		return this.createUserId;
	}

	public void setCreateUserId(Integer createUserId) {
		this.createUserId = createUserId;
	}

	@Column(name = "create_username", length = 65)
	public String getCreateUsername() {
		return this.createUsername;
	}

	public void setCreateUsername(String createUsername) {
		this.createUsername = createUsername;
	}

	@Column(name = "create_usertype", length = 20)
	public String getCreateUsertype() {
		return this.createUsertype;
	}

	public void setCreateUsertype(String createUsertype) {
		this.createUsertype = createUsertype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendor")
	public Set<LocalFees> getLocalFees() {
		return this.localFees;
	}

	public void setlocalFees(Set<LocalFees> localfeesmasters) {
		this.localFees = localFees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendor")
	public Set<VendorCreditDetails> getVendorCreditDetails() {
		return this.vendorCreditDetails;
	}

	public void setVendorCreditDetails(Set<VendorCreditDetails> vendorCreditDetails) {
		this.vendorCreditDetails = vendorCreditDetails;
	}

}
