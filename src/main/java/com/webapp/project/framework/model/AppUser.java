package com.webapp.project.framework.model;
// Generated Jul 9, 2017 1:44:32 AM by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.webapp.project.modules.jobcard.model.Jobcard;
import com.webapp.project.modules.masters.model.AccountHead;
import com.webapp.project.modules.masters.model.Agent;
import com.webapp.project.modules.masters.model.AirAgent;
import com.webapp.project.modules.masters.model.Carrier;
import com.webapp.project.modules.masters.model.Cha;
import com.webapp.project.modules.masters.model.Charge;
import com.webapp.project.modules.masters.model.City;
import com.webapp.project.modules.masters.model.CoLoader;
import com.webapp.project.modules.masters.model.Consignee;
import com.webapp.project.modules.masters.model.ContainerType;
import com.webapp.project.modules.masters.model.Country;
import com.webapp.project.modules.masters.model.Currency;
import com.webapp.project.modules.masters.model.Customer;
import com.webapp.project.modules.masters.model.DepositBank;
import com.webapp.project.modules.masters.model.LocalFeeDetails;
import com.webapp.project.modules.masters.model.LocalFees;
import com.webapp.project.modules.masters.model.Location;
import com.webapp.project.modules.masters.model.Packages;
import com.webapp.project.modules.masters.model.State;
import com.webapp.project.modules.masters.model.Vendor;
import com.webapp.project.modules.masters.model.VendorCreditDetails;
import com.webapp.project.modules.masters.model.Vessel;
import com.webapp.project.modules.masters.model.Voyage;
import com.webapp.project.modules.parent.model.Parent;
import com.webapp.project.modules.student.model.Student;
import com.webapp.project.modules.teacher.model.Teacher;

/**
 * AppUser generated by hbm2java
 */
@Entity
@Table(name = "app_user", catalog = "websystique", uniqueConstraints = @UniqueConstraint(columnNames = "sso_id"))
public class AppUser implements java.io.Serializable {

	private Long id;
	private String ssoId;
	private String password;
	private String firstName;
	private String lastName;
	private String email;
	private String state;
	private Set<Packages> packages = new HashSet<Packages>(0);
	private Set<AccountHead> accountHeads = new HashSet<AccountHead>(0);
	private Set<CoLoader> coLoaders = new HashSet<CoLoader>(0);
	private Set<Cha> chas = new HashSet<Cha>(0);
	private Set<Voyage> voyages = new HashSet<Voyage>(0);
	private Set<Teacher> teachers = new HashSet<Teacher>(0);
	private Set<Student> students = new HashSet<Student>(0);
	private Set<Vendor> vendors = new HashSet<Vendor>(0);
	private Set<Charge> charges = new HashSet<Charge>(0);
	private Set<DepositBank> depositBanks = new HashSet<DepositBank>(0);
	private Set<ContainerType> containerTypes = new HashSet<ContainerType>(0);
	private Set<AirAgent> airAgents = new HashSet<AirAgent>(0);
	private Set<City> cities = new HashSet<City>(0);
	private Set<Parent> parents = new HashSet<Parent>(0);
	private Set<Jobcard> jobcards = new HashSet<Jobcard>(0);
	private Set<State> states = new HashSet<State>(0);
	private Set<UserDocument> userDocuments = new HashSet<UserDocument>(0);
	private Set<Consignee> consignees = new HashSet<Consignee>(0);
	private Set<Carrier> carriers = new HashSet<Carrier>(0);
	private Set<VendorCreditDetails> vendorCreditDetails = new HashSet<VendorCreditDetails>(0);
	private Set<LocalFees> localFees = new HashSet<LocalFees>(0);
	private Set<UserProfile> userProfiles = new HashSet<UserProfile>(0);
	private Set<Agent> agents = new HashSet<Agent>(0);
	private Set<Location> locations = new HashSet<Location>(0);
	private Set<Vessel> vessels = new HashSet<Vessel>(0);
	private Set<Currency> currencies = new HashSet<Currency>(0);
	private Set<Customer> customers = new HashSet<Customer>(0);
	private Set<LocalFeeDetails> localFeesDetails = new HashSet<LocalFeeDetails>(0);
	private Set<Country> countries = new HashSet<Country>(0);

	public AppUser() {
	}

	public AppUser(String ssoId, String password, String firstName, String lastName, String email, String state) {
		this.ssoId = ssoId;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.state = state;
	}

	public AppUser(String ssoId, String password, String firstName, String lastName, String email, String state,
			Set<Packages> packages, Set<AccountHead> accountHeads,
			Set<CoLoader> coLoaders, Set<Cha> chas, Set<Voyage> voyages,
			Set<Teacher> teachers, Set<Student> students, Set<Vendor> vendors,
			Set<Charge> charges, Set<DepositBank> depositBanks,
			Set<ContainerType> containertypes, Set<AirAgent> airagents,
			Set<City> cities, Set<Parent> parents, Set<Jobcard> jobcards, Set<State> statemasters,
			Set<UserDocument> userDocuments, Set<Consignee> consignees, Set<Carrier> carriers,
			Set<VendorCreditDetails> vendorCreditDetails, Set<LocalFees> localFees,
			Set<UserProfile> userProfiles, Set<Agent> agents, Set<Location> locations,
			Set<Vessel> vessels, Set<Currency> currencies, Set<Customer> customers,
			Set<LocalFeeDetails> localFeesDetails,
			Set<Country> countries) {
		this.ssoId = ssoId;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.state = state;
		this.packages = packages;
		this.accountHeads = accountHeads;
		this.coLoaders = coLoaders;
		this.chas = chas;
		this.voyages = voyages;
		this.teachers = teachers;
		this.students = students;
		this.vendors = vendors;
		this.charges = charges;
		this.depositBanks = depositBanks;
		this.containerTypes = containerTypes;
		this.airAgents = airAgents;
		this.cities = cities;
		this.parents = parents;
		this.jobcards = jobcards;
		this.states = states;
		this.userDocuments = userDocuments;
		this.consignees = consignees;
		this.carriers = carriers;
		this.vendorCreditDetails = vendorCreditDetails;
		this.localFees = localFees;
		this.userProfiles = userProfiles;
		this.agents = agents;
		this.locations = locations;
		this.vessels = vessels;
		this.currencies = currencies;
		this.customers = customers;
		this.localFeesDetails = localFeesDetails;
		this.countries = countries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "sso_id", unique = true, nullable = false, length = 30)
	public String getSsoId() {
		return this.ssoId;
	}

	public void setSsoId(String ssoId) {
		this.ssoId = ssoId;
	}

	@Column(name = "PASSWORD", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "first_name", nullable = false, length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", nullable = false, length = 30)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "state", nullable = false, length = 30)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Packages> getPackages() {
		return this.packages;
	}

	public void setPackages(Set<Packages> packages) {
		this.packages = packages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<AccountHead> accountHeads() {
		return this.accountHeads;
	}

	public void setaccountHeads(Set<AccountHead> accountheadmasters) {
		this.accountHeads = accountHeads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<CoLoader> getCoLoaders() {
		return this.coLoaders;
	}

	public void setCoLoaders(Set<CoLoader> coLoaders) {
		this.coLoaders = coLoaders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Cha> getCha() {
		return this.chas;
	}

	public void setCha(Set<Cha> chas) {
		this.chas = chas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Voyage> getVoyages() {
		return this.voyages;
	}

	public void setVoyages(Set<Voyage> voyages) {
		this.voyages = voyages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Teacher> getTeachers() {
		return this.teachers;
	}

	public void setTeachers(Set<Teacher> teachers) {
		this.teachers = teachers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Student> getStudents() {
		return this.students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Vendor> getVendors() {
		return this.vendors;
	}

	public void setVendors(Set<Vendor> vendors) {
		this.vendors = vendors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Charge> getCharges() {
		return this.charges;
	}

	public void setCharges(Set<Charge> charges) {
		this.charges = charges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<DepositBank> getDepositBanks() {
		return this.depositBanks;
	}

	public void setDepositBanks(Set<DepositBank> depositBanks) {
		this.depositBanks = depositBanks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<ContainerType> getContainerTypes() {
		return this.containerTypes;
	}

	public void setContainerTypes(Set<ContainerType> containerTypes) {
		this.containerTypes = containerTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<AirAgent> AirAgent() {
		return this.airAgents;
	}

	public void setAirAgents(Set<AirAgent> airAgent) {
		this.airAgents = airAgents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<City> getCities() {
		return this.cities;
	}

	public void setCities(Set<City> cities) {
		this.cities = cities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Parent> getParents() {
		return this.parents;
	}

	public void setParents(Set<Parent> parents) {
		this.parents = parents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Jobcard> getJobcards() {
		return this.jobcards;
	}

	public void setJobcards(Set<Jobcard> jobcards) {
		this.jobcards = jobcards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<State> getStates() {
		return this.states;
	}

	public void setStates(Set<State> states) {
		this.states = states;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<UserDocument> getUserDocuments() {
		return this.userDocuments;
	}

	public void setUserDocuments(Set<UserDocument> userDocuments) {
		this.userDocuments = userDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Consignee> getConsignees() {
		return this.consignees;
	}

	public void setConsignees(Set<Consignee> consignees) {
		this.consignees = consignees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Carrier> getCarriers() {
		return this.carriers;
	}

	public void setCarriers(Set<Carrier> carriers) {
		this.carriers = carriers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<VendorCreditDetails> getVendorCreditDetails() {
		return this.vendorCreditDetails;
	}

	public void setVendorCreditDetails(Set<VendorCreditDetails> vendorCreditDetails) {
		this.vendorCreditDetails = vendorCreditDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<LocalFees> getLocalFees() {
		return this.localFees;
	}

	public void setLocalFees(Set<LocalFees> localFees) {
		this.localFees = localFees;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "app_user_user_profile", catalog = "websystique", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_profile_id", nullable = false, updatable = false) })
	public Set<UserProfile> getUserProfiles() {
		return this.userProfiles;
	}

	public void setUserProfiles(Set<UserProfile> userProfiles) {
		this.userProfiles = userProfiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Agent> getAgent() {
		return this.agents;
	}

	public void setAgent(Set<Agent> agentmasters) {
		this.agents = agents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Location> getLocations() {
		return this.locations;
	}

	public void setLocations(Set<Location> locations) {
		this.locations = locations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Vessel> getVessels() {
		return this.vessels;
	}

	public void setVessels(Set<Vessel> vessels) {
		this.vessels = vessels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Currency> getCurrencies() {
		return this.currencies;
	}

	public void setCurrencies(Set<Currency> currencies) {
		this.currencies = currencies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<LocalFeeDetails> getLocalFeeDetails() {
		return this.localFeesDetails;
	}

	public void setLocalFeeDetails(Set<LocalFeeDetails> localFeesDetails) {
		this.localFeesDetails = localFeesDetails;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
	public Set<Country> getCountries() {
		return this.countries;
	}

	public void setCountries(Set<Country> Countries) {
		this.countries = countries;
	}

}
